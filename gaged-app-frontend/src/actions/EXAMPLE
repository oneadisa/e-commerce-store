myForm.set("campaignName", campaignCredentials.campaignName);
myForm.set("natureOfINDIVIDUAL", campaignCredentials.natureOfINDIVIDUAL);
myForm.set("campaignCategory", campaignCredentials.campaignCategory);
myForm.set("INDIVIDUAL_address_country", campaignCredentials.INDIVIDUAL_address_country);
myForm.set("INDIVIDUAL_address_city", campaignCredentials.INDIVIDUAL_address_city);
myForm.set("INDIVIDUAL_address_office", campaignCredentials.INDIVIDUAL_address_office);
myForm.set("phoneNumber", campaignCredentials.phoneNumber);
myForm.set("investorBrief", campaignCredentials.investorBrief);
myForm.set("campaignVideo", campaignCredentials.campaignVideo);
myForm.set("pitchDeck", campaignCredentials.pitchDeck);
myForm.set("ideal_target_audience_age", campaignCredentials.ideal_target_audience_age);
myForm.set("ideal_target_audience_health_issues_or_disabilities", campaignCredentials.ideal_target_audience_health_issues_or_disabilities);
myForm.set("gender", campaignCredentials.gender);
myForm.set("fundingType", campaignCredentials.fundingType);
myForm.set("categoryFunding", campaignCredentials.categoryFunding);
myForm.set("amountBeingRaised", campaignCredentials.amountBeingRaised);
myForm.set("amountAlreadyRaised", campaignCredentials.amountAlreadyRaised);
myForm.set("amountRepaid", campaignCredentials.amountRepaid);
myForm.set("amountToBeRepaid", campaignCredentials.amountToBeRepaid);
myForm.set("amountToBeRepaidPerPayout", campaignCredentials.amountToBeRepaidPerPayout);
myForm.set("pledged_profit_to_lenders", campaignCredentials.pledged_profit_to_lenders);
myForm.set("duration_pledged_profit", campaignCredentials.duration_pledged_profit);
myForm.set("repayment_schedule_pledged_profit", campaignCredentials.repayment_schedule_pledged_profit);
myForm.set("endDatePledgedProfit", campaignCredentials.endDatePledgedProfit);
myForm.set("endDatePledgedProfitString", campaignCredentials.endDatePledgedProfitString);
myForm.set("timePerPayment", campaignCredentials.timePerPayment);
myForm.set("equity_offering_percentage", campaignCredentials.equity_offering_percentage);
myForm.set("bankCode", campaignCredentials.bankCode);
myForm.set("bank_account_name", campaignCredentials.bank_account_name);
myForm.set("bank_account_number", campaignCredentials.bank_account_number);
myForm.set("duration", campaignCredentials.duration);
myForm.set("go_live_schedule", campaignCredentials.go_live_schedule);
myForm.set("campaignLiveStatus", campaignCredentials.campaignLiveStatus);
myForm.set("familiarWithCrowdFunding", campaignCredentials.familiarWithCrowdFunding);
myForm.set("storeOnGaged", campaignCredentials.storeOnGaged);
myForm.set("endDate", campaignCredentials.endDate);
myForm.set("firstPaymentDate", campaignCredentials.firstPaymentDate);
myForm.set("firstPaymentDateString", campaignCredentials.firstPaymentDateString);
myForm.set("endDateString", campaignCredentials.endDateString);
myForm.set("paymentStartDate", campaignCredentials.paymentStartDate);

 <div className="flex gap-2 border border-gray-300 p-3 w-72">
   <div className="h-7 w-7 bg-gray-400 rounded-full p-2">
     <div className="h-full w-full bg-gray-800 rounded-full" />
   </div>
   <h4 className="text-lg font-normal">
     Limited Liability Company
   </h4>


export const DELETE_BUSINESS_ORDER_REQUEST =
  "DELETE_BUSINESS_ORDER_REQUEST";
export const DELETE_BUSINESS_ORDER_SUCCESS =
  "DELETE_BUSINESS_ORDER_SUCCESS";
export const DELETE_BUSINESS_ORDER_RESET = "DELETE_BUSINESS_ORDER_RESET";
export const DELETE_BUSINESS_ORDER_FAIL = "DELETE_BUSINESS_ORDER_FAIL";
export const DELETE_INDIVIDUAL_CUSTOMER_REQUEST =
  "DELETE_INDIVIDUAL_CUSTOMER_REQUEST";
export const DELETE_INDIVIDUAL_CUSTOMER_SUCCESS =
  "DELETE_INDIVIDUAL_CUSTOMER_SUCCESS";
export const DELETE_INDIVIDUAL_CUSTOMER_RESET =
  "DELETE_INDIVIDUAL_CUSTOMER_RESET";
export const DELETE_INDIVIDUAL_CUSTOMER_FAIL =
  "DELETE_INDIVIDUAL_CUSTOMER_FAIL";
export const DELETE_BUSINESS_CUSTOMER_REQUEST =
  "DELETE_BUSINESS_CUSTOMER_REQUEST";
export const DELETE_BUSINESS_CUSTOMER_SUCCESS =
  "DELETE_BUSINESS_CUSTOMER_SUCCESS";
export const DELETE_BUSINESS_CUSTOMER_RESET =
  "DELETE_BUSINESS_CUSTOMER_RESET";
export const DELETE_BUSINESS_CUSTOMER_FAIL =
  "DELETE_BUSINESS_CUSTOMER_FAIL";
 const CREATE_INDIVIDUAL_CUSTOMER_REQUEST =
ATE_INDIVIDUAL_CUSTOMER_REQUEST";
 const CREATE_INDIVIDUAL_CUSTOMER_SUCCESS =
ATE_INDIVIDUAL_CUSTOMER_SUCCESS";
 const CREATE_INDIVIDUAL_CUSTOMER_RESET =
ATE_INDIVIDUAL_CUSTOMER_RESET";
 const CREATE_INDIVIDUAL_CUSTOMER_FAIL =
ATE_INDIVIDUAL_CUSTOMER_FAIL";
 const CREATE_BUSINESS_CUSTOMER_REQUEST =
ATE_BUSINESS_CUSTOMER_REQUEST";
 const CREATE_BUSINESS_CUSTOMER_SUCCESS =
ATE_BUSINESS_CUSTOMER_SUCCESS";
 const CREATE_BUSINESS_CUSTOMER_RESET = "CREATE_BUSINESS_CUSTOMER_RESET";
 const CREATE_BUSINESS_CUSTOMER_FAIL = "CREATE_BUSINESS_CUSTOMER_FAIL";
 const ALL_INDIVIDUAL_CUSTOMER_REQUEST =
_INDIVIDUAL_CUSTOMER_REQUEST";
 const ALL_INDIVIDUAL_CUSTOMER_SUCCESS =
_INDIVIDUAL_CUSTOMER_SUCCESS";
 const ALL_INDIVIDUAL_CUSTOMER_RESET = "ALL_INDIVIDUAL_CUSTOMER_RESET";
 const ALL_INDIVIDUAL_CUSTOMER_FAIL = "ALL_INDIVIDUAL_CUSTOMER_FAIL";
 const ALL_BUSINESS_CUSTOMER_REQUEST = "ALL_BUSINESS_CUSTOMER_REQUEST";
 const ALL_BUSINESS_CUSTOMER_SUCCESS = "ALL_BUSINESS_CUSTOMER_SUCCESS";
 const ALL_BUSINESS_CUSTOMER_RESET = "ALL_BUSINESS_CUSTOMER_RESET";
 const ALL_BUSINESS_CUSTOMER_FAIL = "ALL_BUSINESS_CUSTOMER_FAIL";
 const ALL_INDIVIDUAL_REVIEWS_REQUEST = "ALL_INDIVIDUAL_REVIEWS_REQUEST";
 const ALL_INDIVIDUAL_REVIEWS_SUCCESS = "ALL_INDIVIDUAL_REVIEWS_SUCCESS";
 const ALL_INDIVIDUAL_REVIEWS_RESET = "ALL_INDIVIDUAL_REVIEWS_RESET";
 const ALL_INDIVIDUAL_REVIEWS_FAIL = "ALL_INDIVIDUAL_REVIEWS_FAIL";
 const ALL_BUSINESS_REVIEWS_REQUEST = "ALL_BUSINESS_REVIEWS_REQUEST";
 const ALL_BUSINESS_REVIEWS_SUCCESS = "ALL_BUSINESS_REVIEWS_SUCCESS";
 const ALL_BUSINESS_REVIEWS_RESET = "ALL_BUSINESS_REVIEWS_RESET";
 const ALL_BUSINESS_REVIEWS_FAIL = "ALL_BUSINESS_REVIEWS_FAIL";
 const CREATE_INDIVIDUAL_REVIEW_REQUEST =
ATE_INDIVIDUAL_REVIEW_REQUEST";
 const CREATE_INDIVIDUAL_REVIEW_SUCCESS =
ATE_INDIVIDUAL_REVIEW_SUCCESS";
 const CREATE_INDIVIDUAL_REVIEW_RESET = "CREATE_INDIVIDUAL_REVIEW_RESET";
 const CREATE_INDIVIDUAL_REVIEW_FAIL = "CREATE_INDIVIDUAL_REVIEW_FAIL";
 const CREATE_BUSINESS_REVIEW_REQUEST = "CREATE_BUSINESS_REVIEW_REQUEST";
 const CREATE_BUSINESS_REVIEW_SUCCESS = "CREATE_BUSINESS_REVIEW_SUCCESS";
 const CREATE_BUSINESS_REVIEW_RESET = "CREATE_BUSINESS_REVIEW_RESET";
 const CREATE_BUSINESS_REVIEW_FAIL = "CREATE_BUSINESS_REVIEW_FAIL";
 const NEW_INDIVIDUAL_REVIEW_REQUEST =
ATE_INDIVIDUAL_REVIEW_REQUEST";
 const NEW_INDIVIDUAL_REVIEW_SUCCESS =
ATE_INDIVIDUAL_REVIEW_SUCCESS";
 const NEW_INDIVIDUAL_REVIEW_RESET = "NEW_INDIVIDUAL_REVIEW_RESET";
 const NEW_INDIVIDUAL_REVIEW_FAIL = "NEW_INDIVIDUAL_REVIEW_FAIL";
 const NEW_BUSINESS_REVIEW_REQUEST = "NEW_BUSINESS_REVIEW_REQUEST";
 const NEW_BUSINESS_REVIEW_SUCCESS = "NEW_BUSINESS_REVIEW_SUCCESS";
 const NEW_BUSINESS_REVIEW_RESET = "NEW_BUSINESS_REVIEW_RESET";
 const NEW_BUSINESS_REVIEW_FAIL = "NEW_BUSINESS_REVIEW_FAIL";
 const DELETE_INDIVIDUAL_REVIEW_REQUEST =
ETE_INDIVIDUAL_REVIEW_REQUEST";
 const DELETE_INDIVIDUAL_REVIEW_SUCCESS =
ETE_INDIVIDUAL_REVIEW_SUCCESS";
 const DELETE_INDIVIDUAL_REVIEW_RESET = "DELETE_INDIVIDUAL_REVIEW_RESET";
 const DELETE_INDIVIDUAL_REVIEW_FAIL = "DELETE_INDIVIDUAL_REVIEW_FAIL";
 const DELETE_BUSINESS_REVIEW_REQUEST = "DELETE_BUSINESS_REVIEW_REQUEST";
 const DELETE_BUSINESS_REVIEW_SUCCESS = "DELETE_BUSINESS_REVIEW_SUCCESS";
 const DELETE_BUSINESS_REVIEW_RESET = "DELETE_BUSINESS_REVIEW_RESET";
 const DELETE_BUSINESS_REVIEW_FAIL = "DELETE_BUSINESS_REVIEW_FAIL";

 const STORE_PRODUCT_CREATE_REQUEST = "STORE_PRODUCT_CREATE_REQUEST";
 

 function postThirdImageDetails(pics) {
  setPicMessage(null);
  if (
    pics.type === "image/jpeg" ||
    pics.type === "image/png" ||
    pics.type === "image/jpg"
  ) {
    const data = new FormData();
    data.append("file", pics);
    data.append("upload_preset", "gagedio");
    data.append("cloud_name", "gaged");
    fetch("https://api.cloudinary.com/v1_1/gaged/image/upload", {
      method: "post",
      body: data,
    })
      .then((res) => res.json())
      .then((data) => {
        console.log(data);
        setProductCredentials.productImageThree(data.url.toString());
      })
      .catch((err) => {
        console.log(err);
      });
  } else {
    // return setPicMessage("Please select at least one image.");
  }
}

<input
  onChange={(e) => postFirstImageDetails(e.target.files[0])}
  id="custom-file"
  type="file"
  className="hidden"
/>